<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--继承spring-boot-starter-parent
        搞定了插件【spring-boot-starter-parent】
        搞定了依赖【spring-boot-dependencies】
        -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.8.RELEASE</version>
    </parent>

    <!--孩子如果是同名的groupId则可以不写-->
    <groupId>com.qbh</groupId>
    <artifactId>p2p-000-parent</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>



    <properties>

        <java.version>1.8</java.version>

        <p2p-001-api.version>1.0</p2p-001-api.version>
        <dubbo-spring-boot-starter.version>2.0.0</dubbo-spring-boot-starter.version>
        <zkclient.version>0.10</zkclient.version>
         <mybatis-spring-boot-starter.version>2.1.2</mybatis-spring-boot-starter.version>
    </properties>

    <!--
    重点：我们只需要管理我们的第三方依赖，springBoot已经依赖了的，不需要管理，否则版本报错
    这里就必须要知道，SpringBoot到底管理了那些
    可以直接拷贝artifactId，去spring-boot-dependencies去查询
    -->
    <dependencyManagement>
        <dependencies>
            <!--Spring Boot 有的自己的父亲不能管，管了直接报版本错误-->
            <!--我们自己的父pom只管理第三方的-->
            <dependency>
                <groupId>com.qbh</groupId>
                <artifactId>p2p-001-api</artifactId>
                <version>${p2p-001-api.version}</version>
            </dependency>
            <!--dubbo-->
            <dependency>
                <groupId>com.alibaba.spring.boot</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-spring-boot-starter.version}</version>
            </dependency>
            <!--zkClient-->
            <!--zookeeper注册中心-->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--公共的模块-->
    <!--公共的依赖到这里-->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!--spring-boot-maven-plugin双打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--出现测试失败，这里需要忽略：忽略打包时出现的【Failed to execute goal
            org.apache.maven.plugins:maven-surefire-plugin】错误
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>